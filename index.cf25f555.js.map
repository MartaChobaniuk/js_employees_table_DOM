{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCAA,I,EAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,SAAS,gBAAgB,CAAC,MACpC,EAAQ,SAAS,aAAa,CAAC,SAC/B,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,EAAM,IAAI,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAE3B,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,IAAI,EAAgB,MAChB,EAAe,KAEnB,EAAO,gBAAgB,CAAC,QAAS,eAaG,CAZ9B,CAAA,IAAiB,GACnB,EAAgB,MAChB,EAAe,GAEf,EAAgB,AAAkB,QAAlB,EAA0B,OAAS,MAQnB,EALV,EAM5B,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAGI,EAAQ,EAHN,EAAQ,EAAK,KAAK,CAPL,EAOkB,CAAC,WAAW,CAAC,IAAI,GAAG,WAAW,GAC9D,EAAQ,EAAK,KAAK,CARL,EAQkB,CAAC,WAAW,CAAC,IAAI,GAAG,WAAW,SAYpE,CARI,AAAgB,IAZD,GAYM,AAAgB,IAZtB,GAajB,EAAS,WAAW,EAAM,OAAO,CAAC,SAAU,KAC5C,EAAS,WAAW,EAAM,OAAO,CAAC,SAAU,OAE5C,EAAS,EACT,EAAS,GAGP,AAAc,QAAd,GACK,EAAS,EAAS,EAAI,EAAS,EAAS,GAAK,EAE7C,EAAS,EAAS,EAAI,EAAS,EAAS,GAAK,CAExD,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,AA3BR,EA2Be,aAAa,CAAC,SAAS,WAAW,CAAC,E,EA1B9D,EACF,EACF,GA2BA,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAI,SAAS,CAAC,MAAM,CAAC,SACvB,GAEA,EAAE,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,SACpC,GAEA,EAAM,kBAAkB,CACtB,WACC,u1BA+BH,IAAM,EAAO,SAAS,aAAa,CAAC,sBAEpC,SAAS,EAAmB,CAAI,CAAE,CAAW,EAC3C,SAAS,IAAI,CAAC,kBAAkB,CAC9B,aACA,kCAEwB,MAAA,CADG,EAAK,yDAEzB,MAAA,CADiB,EAAK,sBACV,MAAA,CAAZ,EAAY,yBAKrB,IAAM,EAAU,SAAS,aAAa,CAAC,iBAEvC,WAAW,WACT,EAAQ,MAAM,EAChB,EAAG,IACL,CAEA,EAAK,gBAAgB,CAAC,SAAU,SAAC,CAAjC,EACE,EAAE,cAAc,GAEhB,IAAM,EAAU,EAAK,IAAI,CAAC,KAAK,CACzB,EAAW,EAAK,QAAQ,CAAC,KAAK,CAC9B,EAAS,EAAK,MAAM,CAAC,KAAK,CAC1B,EAAM,OAAO,EAAK,GAAG,CAAC,KAAK,EAC3B,EAAS,OAAO,EAAK,MAAM,CAAC,KAAK,EAEnC,EAAe,GACf,EAAU,CAAA,EAYd,GAVI,EAAQ,MAAM,CAAG,IACnB,GAAgB,0CAChB,EAAU,CAAA,GAGR,CAAA,EAAM,IAAM,EAAM,EAAA,IACpB,GAAgB,sCAChB,EAAU,CAAA,GAGR,CAAC,EAAS,CACZ,EAAmB,QAAS,GAE5B,MACF,CAEA,EAAM,kBAAkB,CACtB,YACC,yBAGO,MAAA,CADA,EAAQ,qBAER,MAAA,CADA,EAAS,qBAET,MAAA,CADA,EAAO,qBAEP,MAAA,CADA,EAAI,qBACiC,MAAA,CAApC,IAAkC,MAAA,CAA/B,EAAO,cAAc,CAAC,UAAW,yBAK/C,EAAK,IAAI,CAAC,EAAM,gBAAgB,EAEhC,EAAmB,UAAW,wCAC9B,EAAK,KAAK,EACZ,GAEA,EAAM,gBAAgB,CAAC,WAAY,SAAC,CAApC,EACE,IAAM,EAAS,EAAE,MAAM,CAEvB,GAAI,AAAmB,OAAnB,EAAO,OAAO,CAAW,CAC3B,IAAM,EAAc,EAAO,WAAW,CAAC,IAAI,GACrC,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAM,KAAK,CAAG,EACd,EAAM,SAAS,CAAG,aAClB,EAAO,WAAW,CAAG,GACrB,EAAO,WAAW,CAAC,GACnB,EAAM,KAAK,GAEX,EAAM,gBAAgB,CAAC,OAAQ,WAC7B,IAAM,EAAW,EAAM,KAAK,CAAC,IAAI,EAE7B,AAAa,CAAA,KAAb,EACF,EAAO,WAAW,CAAG,EAErB,EAAO,WAAW,CAAG,CAEzB,GAEA,EAAM,gBAAgB,CAAC,WAAY,SAAC,CAApC,EACE,GAAI,AAAW,UAAX,EAAG,GAAG,CAAc,CACtB,IAAM,EAAW,EAAM,KAAK,CAAC,IAAI,EAE7B,AAAa,CAAA,KAAb,EACF,EAAO,WAAW,CAAG,EAErB,EAAO,WAAW,CAAG,EAEvB,EAAM,IAAI,EACZ,CACF,EACF,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar headers = document.querySelectorAll(\"th\");\nvar tbody = document.querySelector(\"tbody\");\nvar rows = _to_consumable_array(tbody.rows);\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    headers.forEach(function(header, index) {\n        var sortDirection = \"asc\";\n        var activeHeader = null;\n        header.addEventListener(\"click\", function() {\n            if (activeHeader !== header) {\n                sortDirection = \"asc\";\n                activeHeader = header;\n            } else sortDirection = sortDirection === \"asc\" ? \"desc\" : \"asc\";\n            sortTable(table, index, sortDirection);\n        });\n    });\n});\nfunction sortTable(tableT, columnIndex, direction) {\n    rows.sort(function(rowA, rowB) {\n        var cellA = rowA.cells[columnIndex].textContent.trim().toLowerCase();\n        var cellB = rowB.cells[columnIndex].textContent.trim().toLowerCase();\n        var valueA, valueB;\n        if (columnIndex === 3 || columnIndex === 4) {\n            valueA = parseFloat(cellA.replace(/[$, ]/g, \"\"));\n            valueB = parseFloat(cellB.replace(/[$, ]/g, \"\"));\n        } else {\n            valueA = cellA;\n            valueB = cellB;\n        }\n        if (direction === \"asc\") return valueA > valueB ? 1 : valueA < valueB ? -1 : 0;\n        else return valueA < valueB ? 1 : valueA > valueB ? -1 : 0;\n    });\n    rows.forEach(function(row) {\n        return tableT.querySelector(\"tbody\").appendChild(row);\n    });\n}\ntbody.addEventListener(\"click\", function(e) {\n    rows.forEach(function(row) {\n        row.classList.remove(\"active\");\n    });\n    e.target.parentNode.classList.add(\"active\");\n});\ntable.insertAdjacentHTML(\"afterend\", '\\n  <form class=\"new-employee-form\">\\n    <label>\\n      Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required>\\n    </label>\\n    <label>\\n      Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required>\\n    </label>\\n    <label>Office:\\n      <select name=\"office\" data-qa=\"office\" required>\\n        <option>Tokyo</option>\\n        <option>Singapore</option>\\n        <option>London</option>\\n        <option>New York</option>\\n        <option>Edinburgh</option>\\n        <option>San Francisco</option>\\n      </select>\\n    </label>\\n    <label>\\n      Age: <input name=\"age\" type=\"number\"\\n      data-qa=\"age\" required>\\n    </label>\\n    <label>\\n      Salary: <input name=\"salary\" type=\"number\"\\n        data-qa=\"salary\" required>\\n    </label>\\n    <button name=\"button\" type=\"submit\">Save to table</button>\\n  </form>\\n');\nvar form = document.querySelector(\".new-employee-form\");\nfunction createNotification(type, description) {\n    document.body.insertAdjacentHTML(\"afterbegin\", '\\n    <div class=\"notification '.concat(type, '\" data-qa=\"notification\">\\n      <span class=\"title\">').concat(type, \"</span>\\n      <p>\").concat(description, \"</p>\\n    </div>\\n  \"));\n    var message = document.querySelector(\".notification\");\n    setTimeout(function() {\n        message.remove();\n    }, 3000);\n}\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var nameEmp = form.name.value;\n    var position = form.position.value;\n    var office = form.office.value;\n    var age = Number(form.age.value);\n    var salary = Number(form.salary.value);\n    var errorMessage = \"\";\n    var isValid = true;\n    if (nameEmp.length < 4) {\n        errorMessage += \"Name must be at least 4 characters long\";\n        isValid = false;\n    }\n    if (age < 18 || age > 90) {\n        errorMessage += \"Age must be between 18 and 90 years\";\n        isValid = false;\n    }\n    if (!isValid) {\n        createNotification(\"error\", errorMessage);\n        return;\n    }\n    tbody.insertAdjacentHTML(\"beforeend\", \"\\n    <tr>\\n      <td>\".concat(nameEmp, \"</td>\\n      <td>\").concat(position, \"</td>\\n      <td>\").concat(office, \"</td>\\n      <td>\").concat(age, \"</td>\\n      <td>\").concat(\"$\".concat(salary.toLocaleString(\"en-US\")), \"</td>\\n    </tr>\\n  \"));\n    rows.push(tbody.lastElementChild);\n    createNotification(\"success\", \"Success! Employee added to the table\");\n    form.reset();\n});\ntbody.addEventListener(\"dblclick\", function(e) {\n    var target = e.target;\n    if (target.tagName === \"TD\") {\n        var currentText = target.textContent.trim();\n        var input = document.createElement(\"input\");\n        input.value = currentText;\n        input.className = \"cell-input\";\n        target.textContent = \"\";\n        target.appendChild(input);\n        input.focus();\n        input.addEventListener(\"blur\", function() {\n            var newValue = input.value.trim();\n            if (newValue === \"\") target.textContent = currentText;\n            else target.textContent = newValue;\n        });\n        input.addEventListener(\"keypress\", function(ev) {\n            if (ev.key === \"Enter\") {\n                var newValue = input.value.trim();\n                if (newValue === \"\") target.textContent = currentText;\n                else target.textContent = newValue;\n                input.blur();\n            }\n        });\n    }\n});\n\n//# sourceMappingURL=index.cf25f555.js.map\n","const table = document.querySelector('table');\nconst headers = document.querySelectorAll('th');\nconst tbody = document.querySelector('tbody');\nconst rows = [...tbody.rows];\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  headers.forEach((header, index) => {\n    let sortDirection = 'asc';\n    let activeHeader = null;\n\n    header.addEventListener('click', () => {\n      if (activeHeader !== header) {\n        sortDirection = 'asc';\n        activeHeader = header;\n      } else {\n        sortDirection = sortDirection === 'asc' ? 'desc' : 'asc';\n      }\n\n      sortTable(table, index, sortDirection);\n    });\n  });\n});\n\nfunction sortTable(tableT, columnIndex, direction) {\n  rows.sort((rowA, rowB) => {\n    const cellA = rowA.cells[columnIndex].textContent.trim().toLowerCase();\n    const cellB = rowB.cells[columnIndex].textContent.trim().toLowerCase();\n\n    let valueA, valueB;\n\n    if (columnIndex === 3 || columnIndex === 4) {\n      valueA = parseFloat(cellA.replace(/[$, ]/g, ''));\n      valueB = parseFloat(cellB.replace(/[$, ]/g, ''));\n    } else {\n      valueA = cellA;\n      valueB = cellB;\n    }\n\n    if (direction === 'asc') {\n      return valueA > valueB ? 1 : valueA < valueB ? -1 : 0;\n    } else {\n      return valueA < valueB ? 1 : valueA > valueB ? -1 : 0;\n    }\n  });\n\n  rows.forEach((row) => tableT.querySelector('tbody').appendChild(row));\n}\n\ntbody.addEventListener('click', (e) => {\n  rows.forEach((row) => {\n    row.classList.remove('active');\n  });\n\n  e.target.parentNode.classList.add('active');\n});\n\ntable.insertAdjacentHTML(\n  'afterend',\n  `\n  <form class=\"new-employee-form\">\n    <label>\n      Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n    </label>\n    <label>\n      Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n    </label>\n    <label>Office:\n      <select name=\"office\" data-qa=\"office\" required>\n        <option>Tokyo</option>\n        <option>Singapore</option>\n        <option>London</option>\n        <option>New York</option>\n        <option>Edinburgh</option>\n        <option>San Francisco</option>\n      </select>\n    </label>\n    <label>\n      Age: <input name=\"age\" type=\"number\"\n      data-qa=\"age\" required>\n    </label>\n    <label>\n      Salary: <input name=\"salary\" type=\"number\"\n        data-qa=\"salary\" required>\n    </label>\n    <button name=\"button\" type=\"submit\">Save to table</button>\n  </form>\n`,\n);\n\nconst form = document.querySelector('.new-employee-form');\n\nfunction createNotification(type, description) {\n  document.body.insertAdjacentHTML(\n    'afterbegin',\n    `\n    <div class=\"notification ${type}\" data-qa=\"notification\">\n      <span class=\"title\">${type}</span>\n      <p>${description}</p>\n    </div>\n  `,\n  );\n\n  const message = document.querySelector('.notification');\n\n  setTimeout(() => {\n    message.remove();\n  }, 3000);\n}\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const nameEmp = form.name.value;\n  const position = form.position.value;\n  const office = form.office.value;\n  const age = Number(form.age.value);\n  const salary = Number(form.salary.value);\n\n  let errorMessage = '';\n  let isValid = true;\n\n  if (nameEmp.length < 4) {\n    errorMessage += 'Name must be at least 4 characters long';\n    isValid = false;\n  }\n\n  if (age < 18 || age > 90) {\n    errorMessage += 'Age must be between 18 and 90 years';\n    isValid = false;\n  }\n\n  if (!isValid) {\n    createNotification('error', errorMessage);\n\n    return;\n  }\n\n  tbody.insertAdjacentHTML(\n    'beforeend',\n    `\n    <tr>\n      <td>${nameEmp}</td>\n      <td>${position}</td>\n      <td>${office}</td>\n      <td>${age}</td>\n      <td>${`$${salary.toLocaleString('en-US')}`}</td>\n    </tr>\n  `,\n  );\n\n  rows.push(tbody.lastElementChild);\n\n  createNotification('success', 'Success! Employee added to the table');\n  form.reset();\n});\n\ntbody.addEventListener('dblclick', (e) => {\n  const target = e.target;\n\n  if (target.tagName === 'TD') {\n    const currentText = target.textContent.trim();\n    const input = document.createElement('input');\n\n    input.value = currentText;\n    input.className = 'cell-input';\n    target.textContent = '';\n    target.appendChild(input);\n    input.focus();\n\n    input.addEventListener('blur', () => {\n      const newValue = input.value.trim();\n\n      if (newValue === '') {\n        target.textContent = currentText;\n      } else {\n        target.textContent = newValue;\n      }\n    });\n\n    input.addEventListener('keypress', (ev) => {\n      if (ev.key === 'Enter') {\n        const newValue = input.value.trim();\n\n        if (newValue === '') {\n          target.textContent = currentText;\n        } else {\n          target.textContent = newValue;\n        }\n        input.blur();\n      }\n    });\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","headers","querySelectorAll","tbody","rows","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","addEventListener","forEach","header","index","sortDirection","activeHeader","direction","sort","rowA","rowB","valueA","valueB","cellA","cells","textContent","trim","toLowerCase","cellB","columnIndex","parseFloat","replace","row","tableT","appendChild","e","classList","remove","target","parentNode","add","insertAdjacentHTML","form","createNotification","type","description","body","concat","message","setTimeout","preventDefault","nameEmp","value","position","office","age","Number","salary","errorMessage","isValid","toLocaleString","push","lastElementChild","reset","tagName","currentText","input","createElement","className","focus","newValue","ev","key","blur"],"version":3,"file":"index.cf25f555.js.map"}